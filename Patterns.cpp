
#include <QString>
#include "Patterns.h"


// a list of sql keywords. Doesn't include stuff from oracle, postgres, etc

void fillPaterns()
{

    keywordPatterns.push_back("abort");
    keywordPatterns.push_back("abortsession");
    keywordPatterns.push_back("abs");
    keywordPatterns.push_back("absent");
    keywordPatterns.push_back("absolute");
    keywordPatterns.push_back("access");
    keywordPatterns.push_back("accessible");
    keywordPatterns.push_back("access_lock");
    keywordPatterns.push_back("account");
    keywordPatterns.push_back("acos");
    keywordPatterns.push_back("acosh");
    keywordPatterns.push_back("action");
    keywordPatterns.push_back("add");
    keywordPatterns.push_back("add_months");
    keywordPatterns.push_back("admin");
    keywordPatterns.push_back("after");
    keywordPatterns.push_back("aggregate");
    keywordPatterns.push_back("alias");
    keywordPatterns.push_back("all");
    keywordPatterns.push_back("allocate");
    keywordPatterns.push_back("allow");
    keywordPatterns.push_back("alter");
    keywordPatterns.push_back("alterand");
    keywordPatterns.push_back("amp");
    keywordPatterns.push_back("analyse");
    keywordPatterns.push_back("analyze");
    keywordPatterns.push_back("and");
    keywordPatterns.push_back("ansidate");
    keywordPatterns.push_back("any");
    keywordPatterns.push_back("any_value");
    keywordPatterns.push_back("are");
    keywordPatterns.push_back("array");
    keywordPatterns.push_back("array_agg");
    keywordPatterns.push_back("array_exists");
    keywordPatterns.push_back("array_max_cardinality");
    keywordPatterns.push_back("as");
    keywordPatterns.push_back("asc");
    keywordPatterns.push_back("asensitive");
    keywordPatterns.push_back("asin");
    keywordPatterns.push_back("asinh");
    keywordPatterns.push_back("assertion");
    keywordPatterns.push_back("associate");
    keywordPatterns.push_back("asutime");
    keywordPatterns.push_back("asymmetric");
    keywordPatterns.push_back("at");
    keywordPatterns.push_back("atan");
    keywordPatterns.push_back("atan2");
    keywordPatterns.push_back("atanh");
    keywordPatterns.push_back("atomic");
    keywordPatterns.push_back("audit");
    keywordPatterns.push_back("authorization");
    keywordPatterns.push_back("aux");
    keywordPatterns.push_back("auxiliary");
    keywordPatterns.push_back("ave");
    keywordPatterns.push_back("average");
    keywordPatterns.push_back("avg");
    keywordPatterns.push_back("backup");
    keywordPatterns.push_back("before");
    keywordPatterns.push_back("begin");
    keywordPatterns.push_back("begin_frame");
    keywordPatterns.push_back("begin_partition");
    keywordPatterns.push_back("between");
    keywordPatterns.push_back("bigint");
    keywordPatterns.push_back("binary");
    keywordPatterns.push_back("bit");
    keywordPatterns.push_back("blob");
    keywordPatterns.push_back("boolean");
    keywordPatterns.push_back("both");
    keywordPatterns.push_back("breadth");
    keywordPatterns.push_back("break");
    keywordPatterns.push_back("browse");
    keywordPatterns.push_back("bt");
    keywordPatterns.push_back("btrim");
    keywordPatterns.push_back("bufferpool");
    keywordPatterns.push_back("bulk");
    keywordPatterns.push_back("but");
    keywordPatterns.push_back("by");
    keywordPatterns.push_back("byte");
    keywordPatterns.push_back("byteint");
    keywordPatterns.push_back("bytes");
    keywordPatterns.push_back("call");
    keywordPatterns.push_back("called");
    keywordPatterns.push_back("capture");
    keywordPatterns.push_back("cardinality");
    keywordPatterns.push_back("cascade");
    keywordPatterns.push_back("cascaded");
    keywordPatterns.push_back("case");
    keywordPatterns.push_back("casespecific");
    keywordPatterns.push_back("case_n");
    keywordPatterns.push_back("cast");
    keywordPatterns.push_back("catalog");
    keywordPatterns.push_back("ccsid");
    keywordPatterns.push_back("cd");
    keywordPatterns.push_back("ceil");
    keywordPatterns.push_back("ceiling");
    keywordPatterns.push_back("change");
    keywordPatterns.push_back("char");
    keywordPatterns.push_back("char2hexint");
    keywordPatterns.push_back("character");
    keywordPatterns.push_back("characters");
    keywordPatterns.push_back("character_length");
    keywordPatterns.push_back("chars");
    keywordPatterns.push_back("char_length");
    keywordPatterns.push_back("check");
    keywordPatterns.push_back("checkpoint");
    keywordPatterns.push_back("class");
    keywordPatterns.push_back("classifier");
    keywordPatterns.push_back("clob");
    keywordPatterns.push_back("clone");
    keywordPatterns.push_back("close");
    keywordPatterns.push_back("cluster");
    keywordPatterns.push_back("clustered");
    keywordPatterns.push_back("cm");
    keywordPatterns.push_back("coalesce");
    keywordPatterns.push_back("collate");
    keywordPatterns.push_back("collation");
    keywordPatterns.push_back("collect");
    keywordPatterns.push_back("collection");
    keywordPatterns.push_back("collid");
    keywordPatterns.push_back("column");
    keywordPatterns.push_back("column_value");
    keywordPatterns.push_back("comment");
    keywordPatterns.push_back("commit");
    keywordPatterns.push_back("completion");
    keywordPatterns.push_back("compress");
    keywordPatterns.push_back("compute");
    keywordPatterns.push_back("concat");
    keywordPatterns.push_back("concurrently");
    keywordPatterns.push_back("condition");
    keywordPatterns.push_back("connect");
    keywordPatterns.push_back("connection");
    keywordPatterns.push_back("constraint");
    keywordPatterns.push_back("constraints");
    keywordPatterns.push_back("constructor");
    keywordPatterns.push_back("contains");
    keywordPatterns.push_back("containstable");
    keywordPatterns.push_back("content");
    keywordPatterns.push_back("continue");
    keywordPatterns.push_back("convert");
    keywordPatterns.push_back("convert_table_header");
    keywordPatterns.push_back("copy");
    keywordPatterns.push_back("corr");
    keywordPatterns.push_back("corresponding");
    keywordPatterns.push_back("cos");
    keywordPatterns.push_back("cosh");
    keywordPatterns.push_back("count");
    keywordPatterns.push_back("covar_pop");
    keywordPatterns.push_back("covar_samp");
    keywordPatterns.push_back("create");
    keywordPatterns.push_back("cross");
    keywordPatterns.push_back("cs");
    keywordPatterns.push_back("csum");
    keywordPatterns.push_back("ct");
    keywordPatterns.push_back("cube");
    keywordPatterns.push_back("cume_dist");
    keywordPatterns.push_back("current");
    keywordPatterns.push_back("current_catalog");
    keywordPatterns.push_back("current_date");
    keywordPatterns.push_back("current_default_transform_group");
    keywordPatterns.push_back("current_lc_ctype");
    keywordPatterns.push_back("current_path");
    keywordPatterns.push_back("current_role");
    keywordPatterns.push_back("current_row");
    keywordPatterns.push_back("current_schema");
    keywordPatterns.push_back("current_server");
    keywordPatterns.push_back("current_time");
    keywordPatterns.push_back("current_timestamp");
    keywordPatterns.push_back("current_timezone");
    keywordPatterns.push_back("current_transform_group_for_type");
    keywordPatterns.push_back("current_user");
    keywordPatterns.push_back("currval");
    keywordPatterns.push_back("cursor");
    keywordPatterns.push_back("cv");
    keywordPatterns.push_back("cycle");
    keywordPatterns.push_back("data");
    keywordPatterns.push_back("database");
    keywordPatterns.push_back("databases");
    keywordPatterns.push_back("datablocksize");
    keywordPatterns.push_back("date");
    keywordPatterns.push_back("dateform");
    keywordPatterns.push_back("day");
    keywordPatterns.push_back("days");
    keywordPatterns.push_back("day_hour");
    keywordPatterns.push_back("day_microsecond");
    keywordPatterns.push_back("day_minute");
    keywordPatterns.push_back("day_second");
    keywordPatterns.push_back("dbcc");
    keywordPatterns.push_back("dbinfo");
    keywordPatterns.push_back("deallocate");
    keywordPatterns.push_back("dec");
    keywordPatterns.push_back("decfloat");
    keywordPatterns.push_back("decimal");
    keywordPatterns.push_back("declare");
    keywordPatterns.push_back("default");
    keywordPatterns.push_back("deferrable");
    keywordPatterns.push_back("deferred");
    keywordPatterns.push_back("define");
    keywordPatterns.push_back("degrees");
    keywordPatterns.push_back("del");
    keywordPatterns.push_back("delayed");
    keywordPatterns.push_back("delete");
    keywordPatterns.push_back("dense_rank");
    keywordPatterns.push_back("deny");
    keywordPatterns.push_back("depth");
    keywordPatterns.push_back("deref");
    keywordPatterns.push_back("desc");
    keywordPatterns.push_back("describe");
    keywordPatterns.push_back("descriptor");
    keywordPatterns.push_back("destroy");
    keywordPatterns.push_back("destructor");
    keywordPatterns.push_back("deterministic");
    keywordPatterns.push_back("diagnostic");
    keywordPatterns.push_back("diagnostics");
    keywordPatterns.push_back("dictionary");
    keywordPatterns.push_back("disable");
    keywordPatterns.push_back("disabled");
    keywordPatterns.push_back("disallow");
    keywordPatterns.push_back("disconnect");
    keywordPatterns.push_back("disk");
    keywordPatterns.push_back("distinct");
    keywordPatterns.push_back("distinctrow");
    keywordPatterns.push_back("distributed");
    keywordPatterns.push_back("div");
    keywordPatterns.push_back("do");
    keywordPatterns.push_back("document");
    keywordPatterns.push_back("domain");
    keywordPatterns.push_back("double");
    keywordPatterns.push_back("drop");
    keywordPatterns.push_back("dssize");
    keywordPatterns.push_back("dual");
    keywordPatterns.push_back("dump");
    keywordPatterns.push_back("dynamic");
    keywordPatterns.push_back("each");
    keywordPatterns.push_back("echo");
    keywordPatterns.push_back("editproc");
    keywordPatterns.push_back("element");
    keywordPatterns.push_back("else");
    keywordPatterns.push_back("elseif");
    keywordPatterns.push_back("empty");
    keywordPatterns.push_back("enabled");
    keywordPatterns.push_back("enclosed");
    keywordPatterns.push_back("encoding");
    keywordPatterns.push_back("encryption");
    keywordPatterns.push_back("end");
    keywordPatterns.push_back("end-exec");
    keywordPatterns.push_back("ending");
    keywordPatterns.push_back("end_frame");
    keywordPatterns.push_back("end_partition");
    keywordPatterns.push_back("eq");
    keywordPatterns.push_back("equals");
    keywordPatterns.push_back("erase");
    keywordPatterns.push_back("errlvl");
    keywordPatterns.push_back("error");
    keywordPatterns.push_back("errorfiles");
    keywordPatterns.push_back("errortables");
    keywordPatterns.push_back("escape");
    keywordPatterns.push_back("escaped");
    keywordPatterns.push_back("et");
    keywordPatterns.push_back("every");
    keywordPatterns.push_back("except");
    keywordPatterns.push_back("exception");
    keywordPatterns.push_back("exclusive");
    keywordPatterns.push_back("exec");
    keywordPatterns.push_back("execute");
    keywordPatterns.push_back("exists");
    keywordPatterns.push_back("exit");
    keywordPatterns.push_back("exp");
    keywordPatterns.push_back("explain");
    keywordPatterns.push_back("external");
    keywordPatterns.push_back("extract");
    keywordPatterns.push_back("fallback");
    keywordPatterns.push_back("false");
    keywordPatterns.push_back("fastexport");
    keywordPatterns.push_back("fenced");
    keywordPatterns.push_back("fetch");
    keywordPatterns.push_back("fieldproc");
    keywordPatterns.push_back("file");
    keywordPatterns.push_back("fillfactor");
    keywordPatterns.push_back("filter");
    keywordPatterns.push_back("final");
    keywordPatterns.push_back("first");
    keywordPatterns.push_back("first_value");
    keywordPatterns.push_back("float");
    keywordPatterns.push_back("float4");
    keywordPatterns.push_back("float8");
    keywordPatterns.push_back("floor");
    keywordPatterns.push_back("for");
    keywordPatterns.push_back("force");
    keywordPatterns.push_back("foreign");
    keywordPatterns.push_back("format");
    keywordPatterns.push_back("found");
    keywordPatterns.push_back("frame_row");
    keywordPatterns.push_back("free");
    keywordPatterns.push_back("freespace");
    keywordPatterns.push_back("freetext");
    keywordPatterns.push_back("freetexttable");
    keywordPatterns.push_back("freeze");
    keywordPatterns.push_back("from");
    keywordPatterns.push_back("full");
    keywordPatterns.push_back("fulltext");
    keywordPatterns.push_back("function");
    keywordPatterns.push_back("fusion");
    keywordPatterns.push_back("ge");
    keywordPatterns.push_back("general");
    keywordPatterns.push_back("generated");
    keywordPatterns.push_back("get");
    keywordPatterns.push_back("give");
    keywordPatterns.push_back("global");
    keywordPatterns.push_back("go");
    keywordPatterns.push_back("goto");
    keywordPatterns.push_back("grant");
    keywordPatterns.push_back("graphic");
    keywordPatterns.push_back("greatest");
    keywordPatterns.push_back("group");
    keywordPatterns.push_back("grouping");
    keywordPatterns.push_back("groups");
    keywordPatterns.push_back("gt");
    keywordPatterns.push_back("handler");
    keywordPatterns.push_back("hash");
    keywordPatterns.push_back("hashamp");
    keywordPatterns.push_back("hashbakamp");
    keywordPatterns.push_back("hashbucket");
    keywordPatterns.push_back("hashrow");
    keywordPatterns.push_back("having");
    keywordPatterns.push_back("help");
    keywordPatterns.push_back("high_priority");
    keywordPatterns.push_back("hold");
    keywordPatterns.push_back("holdlock");
    keywordPatterns.push_back("host");
    keywordPatterns.push_back("hour");
    keywordPatterns.push_back("hours");
    keywordPatterns.push_back("hour_microsecond");
    keywordPatterns.push_back("hour_minute");
    keywordPatterns.push_back("hour_second");
    keywordPatterns.push_back("identified");
    keywordPatterns.push_back("identity");
    keywordPatterns.push_back("identitycol");
    keywordPatterns.push_back("identity_insert");
    keywordPatterns.push_back("if");
    keywordPatterns.push_back("ignore");
    keywordPatterns.push_back("ilike");
    keywordPatterns.push_back("immediate");
    keywordPatterns.push_back("in");
    keywordPatterns.push_back("inclusive");
    keywordPatterns.push_back("inconsistent");
    keywordPatterns.push_back("increment");
    keywordPatterns.push_back("index");
    keywordPatterns.push_back("indicator");
    keywordPatterns.push_back("infile");
    keywordPatterns.push_back("inherit");
    keywordPatterns.push_back("initial");
    keywordPatterns.push_back("initialize");
    keywordPatterns.push_back("initially");
    keywordPatterns.push_back("initiate");
    keywordPatterns.push_back("inner");
    keywordPatterns.push_back("inout");
    keywordPatterns.push_back("input");
    keywordPatterns.push_back("ins");
    keywordPatterns.push_back("insensitive");
    keywordPatterns.push_back("insert");
    keywordPatterns.push_back("instead");
    keywordPatterns.push_back("int");
    keywordPatterns.push_back("int1");
    keywordPatterns.push_back("int2");
    keywordPatterns.push_back("int3");
    keywordPatterns.push_back("int4");
    keywordPatterns.push_back("int8");
    keywordPatterns.push_back("integer");
    keywordPatterns.push_back("integerdate");
    keywordPatterns.push_back("intersect");
    keywordPatterns.push_back("intersection");
    keywordPatterns.push_back("interval");
    keywordPatterns.push_back("into");
    keywordPatterns.push_back("io_after_gtids");
    keywordPatterns.push_back("io_before_gtids");
    keywordPatterns.push_back("is");
    keywordPatterns.push_back("isnull");
    keywordPatterns.push_back("isobid");
    keywordPatterns.push_back("isolation");
    keywordPatterns.push_back("iterate");
    keywordPatterns.push_back("jar");
    keywordPatterns.push_back("join");
    keywordPatterns.push_back("journal");
    keywordPatterns.push_back("json");
    keywordPatterns.push_back("json_array");
    keywordPatterns.push_back("json_arrayagg");
    keywordPatterns.push_back("json_exists");
    keywordPatterns.push_back("json_object");
    keywordPatterns.push_back("json_objectagg");
    keywordPatterns.push_back("json_query");
    keywordPatterns.push_back("json_scalar");
    keywordPatterns.push_back("json_serialize");
    keywordPatterns.push_back("json_table");
    keywordPatterns.push_back("json_table_primitive");
    keywordPatterns.push_back("json_value");
    keywordPatterns.push_back("keep");
    keywordPatterns.push_back("key");
    keywordPatterns.push_back("keys");
    keywordPatterns.push_back("kill");
    keywordPatterns.push_back("kurtosis");
    keywordPatterns.push_back("label");
    keywordPatterns.push_back("lag");
    keywordPatterns.push_back("language");
    keywordPatterns.push_back("large");
    keywordPatterns.push_back("last");
    keywordPatterns.push_back("last_value");
    keywordPatterns.push_back("lateral");
    keywordPatterns.push_back("lc_ctype");
    keywordPatterns.push_back("le");
    keywordPatterns.push_back("lead");
    keywordPatterns.push_back("leading");
    keywordPatterns.push_back("least");
    keywordPatterns.push_back("leave");
    keywordPatterns.push_back("left");
    keywordPatterns.push_back("less");
    keywordPatterns.push_back("level");
    keywordPatterns.push_back("like");
    keywordPatterns.push_back("like_regex");
    keywordPatterns.push_back("limit");
    keywordPatterns.push_back("linear");
    keywordPatterns.push_back("lineno");
    keywordPatterns.push_back("lines");
    keywordPatterns.push_back("listagg");
    keywordPatterns.push_back("ln");
    keywordPatterns.push_back("load");
    keywordPatterns.push_back("loading");
    keywordPatterns.push_back("local");
    keywordPatterns.push_back("locale");
    keywordPatterns.push_back("localtime");
    keywordPatterns.push_back("localtimestamp");
    keywordPatterns.push_back("locator");
    keywordPatterns.push_back("locators");
    keywordPatterns.push_back("lock");
    keywordPatterns.push_back("locking");
    keywordPatterns.push_back("lockmax");
    keywordPatterns.push_back("locksize");
    keywordPatterns.push_back("log");
    keywordPatterns.push_back("log10");
    keywordPatterns.push_back("logging");
    keywordPatterns.push_back("logon");
    keywordPatterns.push_back("long");
    keywordPatterns.push_back("longblob");
    keywordPatterns.push_back("longtext");
    keywordPatterns.push_back("loop");
    keywordPatterns.push_back("lower");
    keywordPatterns.push_back("low_priority");
    keywordPatterns.push_back("lpad");
    keywordPatterns.push_back("lt");
    keywordPatterns.push_back("ltrim");
    keywordPatterns.push_back("macro");
    keywordPatterns.push_back("maintained");
    keywordPatterns.push_back("map");
    keywordPatterns.push_back("master_bind");
    keywordPatterns.push_back("master_ssl_verify_server_cert");
    keywordPatterns.push_back("match");
    keywordPatterns.push_back("matches");
    keywordPatterns.push_back("match_number");
    keywordPatterns.push_back("match_recognize");
    keywordPatterns.push_back("materialized");
    keywordPatterns.push_back("mavg");
    keywordPatterns.push_back("max");
    keywordPatterns.push_back("maxextents");
    keywordPatterns.push_back("maximum");
    keywordPatterns.push_back("maxvalue");
    keywordPatterns.push_back("mcharacters");
    keywordPatterns.push_back("mdiff");
    keywordPatterns.push_back("mediumblob");
    keywordPatterns.push_back("mediumint");
    keywordPatterns.push_back("mediumtext");
    keywordPatterns.push_back("member");
    keywordPatterns.push_back("merge");
    keywordPatterns.push_back("method");
    keywordPatterns.push_back("microsecond");
    keywordPatterns.push_back("microseconds");
    keywordPatterns.push_back("middleint");
    keywordPatterns.push_back("min");
    keywordPatterns.push_back("mindex");
    keywordPatterns.push_back("minimum");
    keywordPatterns.push_back("minus");
    keywordPatterns.push_back("minute");
    keywordPatterns.push_back("minutes");
    keywordPatterns.push_back("minute_microsecond");
    keywordPatterns.push_back("minute_second");
    keywordPatterns.push_back("mlinreg");
    keywordPatterns.push_back("mload");
    keywordPatterns.push_back("mlslabel");
    keywordPatterns.push_back("mod");
    keywordPatterns.push_back("mode");
    keywordPatterns.push_back("modifies");
    keywordPatterns.push_back("modify");
    keywordPatterns.push_back("module");
    keywordPatterns.push_back("monitor");
    keywordPatterns.push_back("monresource");
    keywordPatterns.push_back("monsession");
    keywordPatterns.push_back("month");
    keywordPatterns.push_back("months");
    keywordPatterns.push_back("msubstr");
    keywordPatterns.push_back("msum");
    keywordPatterns.push_back("multiset");
    keywordPatterns.push_back("named");
    keywordPatterns.push_back("names");
    keywordPatterns.push_back("national");
    keywordPatterns.push_back("natural");
    keywordPatterns.push_back("nchar");
    keywordPatterns.push_back("nclob");
    keywordPatterns.push_back("ne");
    keywordPatterns.push_back("nested_table_id");
    keywordPatterns.push_back("new");
    keywordPatterns.push_back("new_table");
    keywordPatterns.push_back("next");
    keywordPatterns.push_back("nextval");
    keywordPatterns.push_back("no");
    keywordPatterns.push_back("noaudit");
    keywordPatterns.push_back("nocheck");
    keywordPatterns.push_back("nocompress");
    keywordPatterns.push_back("nonclustered");
    keywordPatterns.push_back("none");
    keywordPatterns.push_back("normalize");
    keywordPatterns.push_back("not");
    keywordPatterns.push_back("notnull");
    keywordPatterns.push_back("nowait");
    keywordPatterns.push_back("no_write_to_binlog");
    keywordPatterns.push_back("nth_value");
    keywordPatterns.push_back("ntile");
    keywordPatterns.push_back("null");
    keywordPatterns.push_back("nullif");
    keywordPatterns.push_back("nullifzero");
    keywordPatterns.push_back("nulls");
    keywordPatterns.push_back("number");
    keywordPatterns.push_back("numeric");
    keywordPatterns.push_back("numparts");
    keywordPatterns.push_back("obid");
    keywordPatterns.push_back("object");
    keywordPatterns.push_back("objects");
    keywordPatterns.push_back("occurrences_regex");
    keywordPatterns.push_back("octet_length");
    keywordPatterns.push_back("of");
    keywordPatterns.push_back("off");
    keywordPatterns.push_back("offline");
    keywordPatterns.push_back("offset");
    keywordPatterns.push_back("offsets");
    keywordPatterns.push_back("old");
    keywordPatterns.push_back("old_table");
    keywordPatterns.push_back("omit");
    keywordPatterns.push_back("on");
    keywordPatterns.push_back("one");
    keywordPatterns.push_back("online");
    keywordPatterns.push_back("only");
    keywordPatterns.push_back("open");
    keywordPatterns.push_back("opendatasource");
    keywordPatterns.push_back("openquery");
    keywordPatterns.push_back("openrowset");
    keywordPatterns.push_back("openxml");
    keywordPatterns.push_back("operation");
    keywordPatterns.push_back("optimization");
    keywordPatterns.push_back("optimize");
    keywordPatterns.push_back("optimizer_costs");
    keywordPatterns.push_back("option");
    keywordPatterns.push_back("optionally");
    keywordPatterns.push_back("or");
    keywordPatterns.push_back("order");
    keywordPatterns.push_back("ordinality");
    keywordPatterns.push_back("organization");
    keywordPatterns.push_back("out");
    keywordPatterns.push_back("outer");
    keywordPatterns.push_back("outfile");
    keywordPatterns.push_back("output");
    keywordPatterns.push_back("over");
    keywordPatterns.push_back("overlaps");
    keywordPatterns.push_back("overlay");
    keywordPatterns.push_back("override");
    keywordPatterns.push_back("package");
    keywordPatterns.push_back("pad");
    keywordPatterns.push_back("padded");
    keywordPatterns.push_back("parameter");
    keywordPatterns.push_back("parameters");
    keywordPatterns.push_back("part");
    keywordPatterns.push_back("partial");
    keywordPatterns.push_back("partition");
    keywordPatterns.push_back("partitioned");
    keywordPatterns.push_back("partitioning");
    keywordPatterns.push_back("password");
    keywordPatterns.push_back("path");
    keywordPatterns.push_back("pattern");
    keywordPatterns.push_back("pctfree");
    keywordPatterns.push_back("per");
    keywordPatterns.push_back("percent");
    keywordPatterns.push_back("percentile_cont");
    keywordPatterns.push_back("percentile_disc");
    keywordPatterns.push_back("percent_rank");
    keywordPatterns.push_back("period");
    keywordPatterns.push_back("perm");
    keywordPatterns.push_back("permanent");
    keywordPatterns.push_back("piecesize");
    keywordPatterns.push_back("pivot");
    keywordPatterns.push_back("placing");
    keywordPatterns.push_back("plan");
    keywordPatterns.push_back("portion");
    keywordPatterns.push_back("position");
    keywordPatterns.push_back("position_regex");
    keywordPatterns.push_back("postfix");
    keywordPatterns.push_back("power");
    keywordPatterns.push_back("precedes");
    keywordPatterns.push_back("precision");
    keywordPatterns.push_back("prefix");
    keywordPatterns.push_back("preorder");
    keywordPatterns.push_back("prepare");
    keywordPatterns.push_back("preserve");
    keywordPatterns.push_back("prevval");
    keywordPatterns.push_back("primary");
    keywordPatterns.push_back("print");
    keywordPatterns.push_back("prior");
    keywordPatterns.push_back("priqty");
    keywordPatterns.push_back("private");
    keywordPatterns.push_back("privileges");
    keywordPatterns.push_back("proc");
    keywordPatterns.push_back("procedure");
    keywordPatterns.push_back("profile");
    keywordPatterns.push_back("program");
    keywordPatterns.push_back("proportional");
    keywordPatterns.push_back("protection");
    keywordPatterns.push_back("psid");
    keywordPatterns.push_back("ptf");
    keywordPatterns.push_back("public");
    keywordPatterns.push_back("purge");
    keywordPatterns.push_back("qualified");
    keywordPatterns.push_back("qualify");
    keywordPatterns.push_back("quantile");
    keywordPatterns.push_back("query");
    keywordPatterns.push_back("queryno");
    keywordPatterns.push_back("radians");
    keywordPatterns.push_back("raiserror");
    keywordPatterns.push_back("random");
    keywordPatterns.push_back("range");
    keywordPatterns.push_back("range_n");
    keywordPatterns.push_back("rank");
    keywordPatterns.push_back("raw");
    keywordPatterns.push_back("read");
    keywordPatterns.push_back("reads");
    keywordPatterns.push_back("readtext");
    keywordPatterns.push_back("read_write");
    keywordPatterns.push_back("real");
    keywordPatterns.push_back("reconfigure");
    keywordPatterns.push_back("recursive");
    keywordPatterns.push_back("ref");
    keywordPatterns.push_back("references");
    keywordPatterns.push_back("referencing");
    keywordPatterns.push_back("refresh");
    keywordPatterns.push_back("regexp");
    keywordPatterns.push_back("regr_avgx");
    keywordPatterns.push_back("regr_avgy");
    keywordPatterns.push_back("regr_count");
    keywordPatterns.push_back("regr_intercept");
    keywordPatterns.push_back("regr_r2");
    keywordPatterns.push_back("regr_slope");
    keywordPatterns.push_back("regr_sxx");
    keywordPatterns.push_back("regr_sxy");
    keywordPatterns.push_back("regr_syy");
    keywordPatterns.push_back("relative");
    keywordPatterns.push_back("release");
    keywordPatterns.push_back("rename");
    keywordPatterns.push_back("repeat");
    keywordPatterns.push_back("replace");
    keywordPatterns.push_back("replication");
    keywordPatterns.push_back("repoverride");
    keywordPatterns.push_back("request");
    keywordPatterns.push_back("require");
    keywordPatterns.push_back("resignal");
    keywordPatterns.push_back("resource");
    keywordPatterns.push_back("restart");
    keywordPatterns.push_back("restore");
    keywordPatterns.push_back("restrict");
    keywordPatterns.push_back("result");
    keywordPatterns.push_back("result_set_locator");
    keywordPatterns.push_back("resume");
    keywordPatterns.push_back("ret");
    keywordPatterns.push_back("retrieve");
    keywordPatterns.push_back("return");
    keywordPatterns.push_back("returning");
    keywordPatterns.push_back("returns");
    keywordPatterns.push_back("revalidate");
    keywordPatterns.push_back("revert");
    keywordPatterns.push_back("revoke");
    keywordPatterns.push_back("right");
    keywordPatterns.push_back("rights");
    keywordPatterns.push_back("rlike");
    keywordPatterns.push_back("role");
    keywordPatterns.push_back("rollback");
    keywordPatterns.push_back("rollforward");
    keywordPatterns.push_back("rollup");
    keywordPatterns.push_back("round_ceiling");
    keywordPatterns.push_back("round_down");
    keywordPatterns.push_back("round_floor");
    keywordPatterns.push_back("round_half_down");
    keywordPatterns.push_back("round_half_even");
    keywordPatterns.push_back("round_half_up");
    keywordPatterns.push_back("round_up");
    keywordPatterns.push_back("routine");
    keywordPatterns.push_back("row");
    keywordPatterns.push_back("rowcount");
    keywordPatterns.push_back("rowguidcol");
    keywordPatterns.push_back("rowid");
    keywordPatterns.push_back("rownum");
    keywordPatterns.push_back("rows");
    keywordPatterns.push_back("rowset");
    keywordPatterns.push_back("row_number");
    keywordPatterns.push_back("rpad");
    keywordPatterns.push_back("rule");
    keywordPatterns.push_back("run");
    keywordPatterns.push_back("running");
    keywordPatterns.push_back("sample");
    keywordPatterns.push_back("sampleid");
    keywordPatterns.push_back("save");
    keywordPatterns.push_back("savepoint");
    keywordPatterns.push_back("schema");
    keywordPatterns.push_back("schemas");
    keywordPatterns.push_back("scope");
    keywordPatterns.push_back("scratchpad");
    keywordPatterns.push_back("scroll");
    keywordPatterns.push_back("search");
    keywordPatterns.push_back("second");
    keywordPatterns.push_back("seconds");
    keywordPatterns.push_back("second_microsecond");
    keywordPatterns.push_back("secqty");
    keywordPatterns.push_back("section");
    keywordPatterns.push_back("security");
    keywordPatterns.push_back("securityaudit");
    keywordPatterns.push_back("seek");
    keywordPatterns.push_back("sel");
    keywordPatterns.push_back("select");
    keywordPatterns.push_back("semantickeyphrasetable");
    keywordPatterns.push_back("semanticsimilaritydetailstable");
    keywordPatterns.push_back("semanticsimilaritytable");
    keywordPatterns.push_back("sensitive");
    keywordPatterns.push_back("separator");
    keywordPatterns.push_back("sequence");
    keywordPatterns.push_back("session");
    keywordPatterns.push_back("session_user");
    keywordPatterns.push_back("set");
    keywordPatterns.push_back("setresrate");
    keywordPatterns.push_back("sets");
    keywordPatterns.push_back("setsessrate");
    keywordPatterns.push_back("setuser");
    keywordPatterns.push_back("share");
    keywordPatterns.push_back("show");
    keywordPatterns.push_back("shutdown");
    keywordPatterns.push_back("signal");
    keywordPatterns.push_back("similar");
    keywordPatterns.push_back("simple");
    keywordPatterns.push_back("sin");
    keywordPatterns.push_back("sinh");
    keywordPatterns.push_back("size");
    keywordPatterns.push_back("skew");
    keywordPatterns.push_back("skip");
    keywordPatterns.push_back("smallint");
    keywordPatterns.push_back("some");
    keywordPatterns.push_back("soundex");
    keywordPatterns.push_back("source");
    keywordPatterns.push_back("space");
    keywordPatterns.push_back("spatial");
    keywordPatterns.push_back("specific");
    keywordPatterns.push_back("specifictype");
    keywordPatterns.push_back("spool");
    keywordPatterns.push_back("sql");
    keywordPatterns.push_back("sqlexception");
    keywordPatterns.push_back("sqlstate");
    keywordPatterns.push_back("sqltext");
    keywordPatterns.push_back("sqlwarning");
    keywordPatterns.push_back("sql_big_result");
    keywordPatterns.push_back("sql_calc_found_rows");
    keywordPatterns.push_back("sql_small_result");
    keywordPatterns.push_back("sqrt");
    keywordPatterns.push_back("ss");
    keywordPatterns.push_back("ssl");
    keywordPatterns.push_back("standard");
    keywordPatterns.push_back("start");
    keywordPatterns.push_back("starting");
    keywordPatterns.push_back("startup");
    keywordPatterns.push_back("state");
    keywordPatterns.push_back("statement");
    keywordPatterns.push_back("static");
    keywordPatterns.push_back("statistics");
    keywordPatterns.push_back("stay");
    keywordPatterns.push_back("stddev_pop");
    keywordPatterns.push_back("stddev_samp");
    keywordPatterns.push_back("stepinfo");
    keywordPatterns.push_back("stogroup");
    keywordPatterns.push_back("stored");
    keywordPatterns.push_back("stores");
    keywordPatterns.push_back("straight_join");
    keywordPatterns.push_back("string_cs");
    keywordPatterns.push_back("structure");
    keywordPatterns.push_back("style");
    keywordPatterns.push_back("submultiset");
    keywordPatterns.push_back("subscriber");
    keywordPatterns.push_back("subset");
    keywordPatterns.push_back("substr");
    keywordPatterns.push_back("substring");
    keywordPatterns.push_back("substring_regex");
    keywordPatterns.push_back("succeeds");
    keywordPatterns.push_back("successful");
    keywordPatterns.push_back("sum");
    keywordPatterns.push_back("summary");
    keywordPatterns.push_back("suspend");
    keywordPatterns.push_back("symmetric");
    keywordPatterns.push_back("synonym");
    keywordPatterns.push_back("sysdate");
    keywordPatterns.push_back("system");
    keywordPatterns.push_back("system_time");
    keywordPatterns.push_back("system_user");
    keywordPatterns.push_back("systimestamp");
    keywordPatterns.push_back("table");
    keywordPatterns.push_back("tablesample");
    keywordPatterns.push_back("tablespace");
    keywordPatterns.push_back("tan");
    keywordPatterns.push_back("tanh");
    keywordPatterns.push_back("tbl_cs");
    keywordPatterns.push_back("temporary");
    keywordPatterns.push_back("terminate");
    keywordPatterns.push_back("terminated");
    keywordPatterns.push_back("textsize");
    keywordPatterns.push_back("than");
    keywordPatterns.push_back("then");
    keywordPatterns.push_back("threshold");
    keywordPatterns.push_back("time");
    keywordPatterns.push_back("timestamp");
    keywordPatterns.push_back("timezone_hour");
    keywordPatterns.push_back("timezone_minute");
    keywordPatterns.push_back("tinyblob");
    keywordPatterns.push_back("tinyint");
    keywordPatterns.push_back("tinytext");
    keywordPatterns.push_back("title");
    keywordPatterns.push_back("to");
    keywordPatterns.push_back("top");
    keywordPatterns.push_back("trace");
    keywordPatterns.push_back("trailing");
    keywordPatterns.push_back("tran");
    keywordPatterns.push_back("transaction");
    keywordPatterns.push_back("translate");
    keywordPatterns.push_back("translate_chk");
    keywordPatterns.push_back("translate_regex");
    keywordPatterns.push_back("translation");
    keywordPatterns.push_back("treat");
    keywordPatterns.push_back("trigger");
    keywordPatterns.push_back("trim");
    keywordPatterns.push_back("trim_array");
    keywordPatterns.push_back("true");
    keywordPatterns.push_back("truncate");
    keywordPatterns.push_back("try_convert");
    keywordPatterns.push_back("tsequal");
    keywordPatterns.push_back("type");
    keywordPatterns.push_back("uc");
    keywordPatterns.push_back("uescape");
    keywordPatterns.push_back("uid");
    keywordPatterns.push_back("undefined");
    keywordPatterns.push_back("under");
    keywordPatterns.push_back("undo");
    keywordPatterns.push_back("union");
    keywordPatterns.push_back("unique");
    keywordPatterns.push_back("unknown");
    keywordPatterns.push_back("unlock");
    keywordPatterns.push_back("unnest");
    keywordPatterns.push_back("unpivot");
    keywordPatterns.push_back("unsigned");
    keywordPatterns.push_back("until");
    keywordPatterns.push_back("upd");
    keywordPatterns.push_back("update");
    keywordPatterns.push_back("updatetext");
    keywordPatterns.push_back("upper");
    keywordPatterns.push_back("uppercase");
    keywordPatterns.push_back("usage");
    keywordPatterns.push_back("use");
    keywordPatterns.push_back("user");
    keywordPatterns.push_back("using");
    keywordPatterns.push_back("utc_date");
    keywordPatterns.push_back("utc_time");
    keywordPatterns.push_back("utc_timestamp");
    keywordPatterns.push_back("validate");
    keywordPatterns.push_back("validproc");
    keywordPatterns.push_back("value");
    keywordPatterns.push_back("values");
    keywordPatterns.push_back("value_of");
    keywordPatterns.push_back("varbinary");
    keywordPatterns.push_back("varbyte");
    keywordPatterns.push_back("varchar");
    keywordPatterns.push_back("varchar2");
    keywordPatterns.push_back("varcharacter");
    keywordPatterns.push_back("vargraphic");
    keywordPatterns.push_back("variable");
    keywordPatterns.push_back("variadic");
    keywordPatterns.push_back("variant");
    keywordPatterns.push_back("varying");
    keywordPatterns.push_back("var_pop");
    keywordPatterns.push_back("var_samp");
    keywordPatterns.push_back("vcat");
    keywordPatterns.push_back("verbose");
    keywordPatterns.push_back("versioning");
    keywordPatterns.push_back("view");
    keywordPatterns.push_back("virtual");
    keywordPatterns.push_back("volatile");
    keywordPatterns.push_back("volumes");
    keywordPatterns.push_back("wait");
    keywordPatterns.push_back("waitfor");
    keywordPatterns.push_back("when");
    keywordPatterns.push_back("whenever");
    keywordPatterns.push_back("where");
    keywordPatterns.push_back("while");
    keywordPatterns.push_back("width_bucket");
    keywordPatterns.push_back("window");
    keywordPatterns.push_back("with");
    keywordPatterns.push_back("within");
    keywordPatterns.push_back("within_group");
    keywordPatterns.push_back("without");
    keywordPatterns.push_back("wlm");
    keywordPatterns.push_back("work");
    keywordPatterns.push_back("write");
    keywordPatterns.push_back("writetext");
    keywordPatterns.push_back("xmlcast");
    keywordPatterns.push_back("xmlexists");
    keywordPatterns.push_back("xmlnamespaces");
    keywordPatterns.push_back("xor");
    keywordPatterns.push_back("year");
    keywordPatterns.push_back("years");
    keywordPatterns.push_back("year_month");
    keywordPatterns.push_back("zerofill");
    keywordPatterns.push_back("zeroifnull");
    keywordPatterns.push_back("zone");
    keywordPatterns.push_back("trunc");


}
